{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "sp500-prediction",
      "metadata": {
        "description": "Name of the App Service app"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "B2",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1v2",
        "P2v2",
        "P3v2"
      ],
      "metadata": {
        "description": "App Service Plan SKU"
      }
    },
    "linuxFxVersion": {
      "type": "string",
      "defaultValue": "DOCKER|sp500predictionacr.azurecr.io/sp500-prediction:latest",
      "metadata": {
        "description": "Docker image for the web app"
      }
    },
    "registryUrl": {
      "type": "string",
      "defaultValue": "https://sp500predictionacr.azurecr.io",
      "metadata": {
        "description": "Container registry URL"
      }
    },
    "registryUsername": {
      "type": "string",
      "metadata": {
        "description": "Container registry username"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Container registry password"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('sp500storage', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Storage account name for persistent data"
      }
    }
  },
  "variables": {
    "appServicePlanName": "[concat(parameters('appName'), '-plan')]",
    "storageAccountName": "[parameters('storageAccountName')]",
    "fileShareName": "sp500data",
    "keyVaultName": "[concat(parameters('appName'), '-kv-', uniqueString(resourceGroup().id))]",
    "logAnalyticsWorkspaceName": "[concat(parameters('appName'), '-logs')]",
    "applicationInsightsName": "[concat(parameters('appName'), '-insights')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "tags": {
        "project": "sp500-prediction",
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('storageAccountName'), '/default/', variables('fileShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "shareQuota": 100
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-04-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('appName')), '2021-02-01', 'Full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
      ],
      "tags": {
        "project": "sp500-prediction",
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      },
      "tags": {
        "project": "sp500-prediction",
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ],
      "tags": {
        "project": "sp500-prediction",
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "tags": {
        "project": "sp500-prediction",
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('appName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "[parameters('linuxFxVersion')]",
          "alwaysOn": true,
          "httpLoggingEnabled": true,
          "logsDirectorySizeLimit": 50,
          "appSettings": [
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[parameters('registryUrl')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[parameters('registryUsername')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[parameters('registryPassword')]"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "WEBSITES_PORT",
              "value": "8501"
            },
            {
              "name": "ENVIRONMENT",
              "value": "production"
            },
            {
              "name": "TZ",
              "value": "America/New_York"
            },
            {
              "name": "LOG_LEVEL",
              "value": "INFO"
            },
            {
              "name": "AZURE_STORAGE_ACCOUNT",
              "value": "[variables('storageAccountName')]"
            },
            {
              "name": "AZURE_STORAGE_KEY",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value]"
            },
            {
              "name": "AZURE_FILE_SHARE",
              "value": "[variables('fileShareName')]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "Recommended"
            },
            {
              "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
              "value": "1.0.0"
            },
            {
              "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
              "value": "1.0.0"
            }
          ]
        },
        "httpsOnly": true,
        "clientAffinityEnabled": false
      },
      "tags": {
        "project": "sp500-prediction",
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('appName'), '/logs')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
      ],
      "properties": {
        "applicationLogs": {
          "fileSystem": {
            "level": "Information"
          }
        },
        "httpLogs": {
          "fileSystem": {
            "retentionInMb": 50,
            "enabled": true
          }
        },
        "detailedErrorMessages": {
          "enabled": true
        },
        "failedRequestsTracing": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('appName'), '/web')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
      ],
      "properties": {
        "repoUrl": "https://github.com/yourusername/sp500-prediction.git",
        "branch": "main",
        "isManualIntegration": false,
        "isGitHubAction": true
      }
    }
  ],
  "outputs": {
    "appUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('appName'))).defaultHostName)]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "applicationInsightsName": {
      "type": "string",
      "value": "[variables('applicationInsightsName')]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[variables('logAnalyticsWorkspaceName')]"
    }
  }
}
